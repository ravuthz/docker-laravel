services:
  node:
    container_name: laravel_node
    image: node:20.18-alpine3.21
    volumes:
      - ./node:/var/www/html
    command:
      - sh
      - -c
      - |
        echo "Node.js Version: $(node -v)"
        echo "NPM Version: $(npm -v)"
  app:
    container_name: laravel_app
    build:
      context: .
      dockerfile: php/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./src:/var/www/html
    # command: php-fpm
    # command: composer -V
    command: php -S 0.0.0.0:8000 -t /var/www/html
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
  php:
    container_name: laravel_php
    image: "ravuthz/laravel-php:8.3"
    build:
      context: .
      dockerfile: php/Dockerfile
    ports:
      # - "8000:8000"
      - "9000:9000"
    volumes:
      - ./src:/var/www/html
      - ./php/config/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./php/config/www.conf:/usr/local/etc/php-fpm.d/www.conf
    # command: php-fpm
  php-supervisor:
    container_name: laravel_php_supervisor
    image: "ravuthz/laravel-php:8.3-supervisor"
    build:
      context: .
      dockerfile: php-supervisor/Dockerfile
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - ./src:/var/www/html
      - ./php/config/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./php/config/www.conf:/usr/local/etc/php-fpm.d/www.conf
  nginx:
    container_name: laravel_nginx
    image: "ravuthz/laravel-nginx:1.25"
    build:
      context: .
      dockerfile: nginx/Dockerfile
    ports:
      - "90:80"
      # - "8080:8080"
    volumes:
      - ./src:/var/www/html
      - ./nginx/config/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/config/nginx.conf:/etc/nginx/nginx.conf

    # command: ls -lah /var/www/html
    # command: nginx -g "daemon off;"
    # command: bash -c "bash /var/www/html/nginx/start-nginx.sh"
    command: bash -c "bash /var/www/html/scripts/start-php.sh"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:90"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      php:
        condition: service_healthy

  tester:
    container_name: api_tester
    image: curlimages/curl:latest
    depends_on:
      - nginx
    # command: [ "sleep", "infinity" ] # Keeps the container running for manual testing
    command:
      - sh
      - -c
      - |
        curl -f http://nginx:80/nginx_status && \
        curl -f http://nginx:80/fpm_ping && \
        curl -f http://nginx:80/fpm_status && \
        sleep infinity
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/nginx_status"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s
